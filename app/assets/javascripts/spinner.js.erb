<% self.class.include Rails.application.routes.url_helpers %>

function enterWaitingState () {
  // whereTheyPublishButton.disabled = true;
  intro.style.display = 'none';
  pubList.innerHTML = "<span id='statusUpdate' class='middle'> This could take a while.</span>"
  startTimer();
}

function exitWaitingState () {
  pubList.innerHTML = ""
  removeSpinner();
  clearInterval(window.statusListener)
}

function startTimer () {
  let timer = 0;
  makeSpinner();
  window.statusListener =  setInterval(function(){
    incrementSpinner()
    timer++
    if (timer % 5 == 0) {let xhttp = new XMLHttpRequest();
      xhttp.open("get", <%= "'#{status_path}'" %> + `?request_number=${requestNumber()}`, true)
      xhttp.send();
    xhttp.onreadystatechange = (response) => { if (xhttp.readyState == 4){ document.getElementById("statusUpdate").innerText = xhttp.responseText } } 
  }}, 500)
}

function incrementSpinner () {
  let activeCircle = document.querySelector('.active');
  circleNum = activeCircle.dataset.circleNum
  let newCircleNum = ((circleNum/1) + 1) % 3
  let nextActiveCircle = document.querySelector(`[data-circle-num~="${newCircleNum}"]`)
  activeCircle.className = "circle"
  nextActiveCircle.className = "circle active"
}

function makeSpinner () {
  let spinnerContainer = document.createElement("span")
  spinnerContainer.id = "spinnerContainer"
  for (let i = 0; i < 3; i++) {
    let spinnerCircle = document.createElement("span")
    spinnerCircle.className = "circle"
    if (i == 0) {
      spinnerCircle.className = "circle active"
    }
    spinnerCircle.dataset.circleNum = i
    spinnerContainer.appendChild(spinnerCircle)
  }
  pubList.appendChild(spinnerContainer)
}

function removeSpinner () {
  let spinnerContainer = document.getElementById('spinnerContainer')
  if (spinnerContainer) {spinnerContainer.remove()}
}